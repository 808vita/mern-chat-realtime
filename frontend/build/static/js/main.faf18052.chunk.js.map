{"version":3,"sources":["components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","Context/ChatProvider.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/HomePage.js","App.js","index.js"],"names":["socket","selectedChatCompare","isSameSenderMargin","messages","m","i","userId","length","sender","_id","isSameSender","undefined","isLastMessage","isSameUser","getSender","loggedUser","users","name","ProfileModal","user","children","useDisclosure","isOpen","onOpen","onClose","onClick","d","base","icon","size","isCentered","h","fontSize","fontFamily","justifyContent","flexDir","alignItems","borderRadius","boxSize","src","pic","alt","md","email","ChatContext","createContext","ChatState","useContext","ChatProvider","useState","selectedChat","setSelectedChat","setUser","notification","setNotification","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","Provider","value","ScrollableChat","map","style","display","label","placement","hasArrow","mt","mr","cursor","backgroundColor","marginLeft","marginTop","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","px","py","mb","variant","colorScheme","pl","UserListItem","bg","_hover","background","color","w","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","loading","setLoading","renameloading","setRenameLoading","toast","useToast","handleSearch","query","a","config","headers","Authorization","token","axios","get","data","console","log","title","description","status","duration","isClosable","position","handleRename","put","chatId","chatName","response","message","handleAddUser","user1","find","u","groupAdmin","handleRemove","flexWrap","pb","placeholder","onChange","e","target","ml","isLoading","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","post","io","on","newMessageRecieved","chat","includes","isGroupChat","toUpperCase","p","overflowY","alignSelf","margin","className","onKeyDown","id","isRequired","options","width","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","borderWidth","ChatLoading","height","MyChats","setLoggedUser","fetchChats","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","count","effect","Effect","SCALE","notif","filter","n","as","Button","rightIcon","removeItem","borderBottomWidth","Chatpage","Login","show","setShow","setEmail","password","setPassword","submitHandler","setItem","stringify","document","location","reload","spacing","type","Signup","setName","confirmpassword","setConfirmpassword","handleClick","HomePage","maxW","centerContent","isFitted","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"iqMAmBIA,EAAQC,E,mJCnBCC,EAAqB,SAACC,EAAUC,EAAGC,EAAGC,GAGlD,OACCD,EAAIF,EAASI,OAAS,GACtBJ,EAASE,EAAI,GAAGG,OAAOC,MAAQL,EAAEI,OAAOC,KACxCN,EAASE,GAAGG,OAAOC,MAAQH,EAEpB,GAEND,EAAIF,EAASI,OAAS,GACtBJ,EAASE,EAAI,GAAGG,OAAOC,MAAQL,EAAEI,OAAOC,KACxCN,EAASE,GAAGG,OAAOC,MAAQH,GAC3BD,IAAMF,EAASI,OAAS,GAAKJ,EAASE,GAAGG,OAAOC,MAAQH,EAElD,EACI,QAGAI,EAAe,SAACP,EAAUC,EAAGC,EAAGC,GAC5C,OACCD,EAAIF,EAASI,OAAS,IACrBJ,EAASE,EAAI,GAAGG,OAAOC,MAAQL,EAAEI,OAAOC,UACTE,IAA/BR,EAASE,EAAI,GAAGG,OAAOC,MACxBN,EAASE,GAAGG,OAAOC,MAAQH,GAIhBM,EAAgB,SAACT,EAAUE,EAAGC,GAC1C,OACCD,IAAMF,EAASI,OAAS,GACxBJ,EAASA,EAASI,OAAS,GAAGC,OAAOC,MAAQH,GAC7CH,EAASA,EAASI,OAAS,GAAGC,OAAOC,KAI1BI,EAAa,SAACV,EAAUC,EAAGC,GACvC,OAAOA,EAAI,GAAKF,EAASE,EAAI,GAAGG,OAAOC,MAAQL,EAAEI,OAAOC,KAG5CK,EAAY,SAACC,EAAYC,GACrC,OAAOA,EAAM,GAAGP,MAAQM,EAAWN,IAAMO,EAAM,GAAGC,KAAOD,EAAM,GAAGC,M,wDCyBpDC,EAlDM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC5B,EAAoCC,cAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAExB,OACE,qCACGJ,EACC,sBAAMK,QAASF,EAAf,SAAwBH,IAExB,cAAC,IAAD,CAAYM,EAAG,CAAEC,KAAM,QAAUC,KAAM,cAAC,IAAD,IAAcH,QAASF,IAEhE,eAAC,IAAD,CAAOM,KAAK,KAAKL,QAASA,EAASF,OAAQA,EAAQQ,YAAU,EAA7D,UACE,cAAC,IAAD,IACA,eAAC,IAAD,CAAcC,EAAE,QAAhB,UACE,cAAC,IAAD,CACEC,SAAS,OACTC,WAAW,YACXP,EAAE,OACFQ,eAAe,SAJjB,SAMGf,EAAKF,OAER,cAAC,IAAD,IACA,eAAC,IAAD,CACES,EAAE,OACFS,QAAQ,SACRC,WAAW,SACXF,eAAe,gBAJjB,UAME,cAAC,IAAD,CACEG,aAAa,OACbC,QAAQ,QACRC,IAAKpB,EAAKqB,IACVC,IAAKtB,EAAKF,OAEZ,eAAC,IAAD,CACEe,SAAU,CAAEL,KAAM,OAAQe,GAAI,QAC9BT,WAAW,YAFb,oBAIUd,EAAKwB,YAGjB,cAAC,IAAD,UACE,cAAC,IAAD,CAAQlB,QAASD,EAAjB,+B,yBCvDNoB,EAAcC,0BAoCPC,EAAY,WACxB,OAAOC,qBAAWH,IAGJI,EAtCM,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SACvB,EAAwC6B,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwBF,qBAAxB,mBAAO9B,EAAP,KAAaiC,EAAb,KACA,EAAwCH,mBAAS,IAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAA0BL,qBAA1B,mBAAOM,EAAP,KAAcC,EAAd,KAEMC,EAAUC,cAUhB,OARAC,qBAAU,WACT,IAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aACjDZ,EAAQQ,GAEHA,GAAUH,EAAQQ,KAAK,OAE1B,CAACR,IAGH,cAACb,EAAYsB,SAAb,CACCC,MAAO,CACNjB,eACAC,kBACAhC,OACAiC,UACAC,eACAC,kBACAC,QACAC,YATF,SAYEpC,KCkBWgD,EAzCQ,SAAC,GAAkB,IAAhBjE,EAAe,EAAfA,SAChBgB,EAAS2B,IAAT3B,KAER,OACE,cAAC,IAAD,UACGhB,GACCA,EAASkE,KAAI,SAACjE,EAAGC,GAAJ,OACX,sBAAKiE,MAAO,CAAEC,QAAS,QAAvB,WACI7D,EAAaP,EAAUC,EAAGC,EAAGc,EAAKV,MAClCG,EAAcT,EAAUE,EAAGc,EAAKV,OAChC,cAAC,IAAD,CAAS+D,MAAOpE,EAAEI,OAAOS,KAAMwD,UAAU,eAAeC,UAAQ,EAAhE,SACE,cAAC,IAAD,CACEC,GAAG,MACHC,GAAI,EACJ/C,KAAK,KACLgD,OAAO,UACP5D,KAAMb,EAAEI,OAAOS,KACfsB,IAAKnC,EAAEI,OAAOgC,QAIpB,sBACE8B,MAAO,CACLQ,gBAAgB,GAAD,OACb1E,EAAEI,OAAOC,MAAQU,EAAKV,IAAM,UAAY,WAE1CsE,WAAY7E,EAAmBC,EAAUC,EAAGC,EAAGc,EAAKV,KACpDuE,UAAWnE,EAAWV,EAAUC,EAAGC,EAAGc,EAAKV,KAAO,EAAI,GACtD4B,aAAc,OACd4C,QAAS,WACTC,SAAU,OATd,SAYG9E,EAAE+E,YA1B+B/E,EAAEK,W,oCCMnC2E,EArBO,SAAC,GAAqC,IAAnCjE,EAAkC,EAAlCA,KAAMkE,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,MAC7C,OACE,eAAC,IAAD,CACEC,GAAI,EACJC,GAAI,EACJnD,aAAa,KACbjC,EAAG,EACHqF,GAAI,EACJC,QAAQ,QACR1D,SAAU,GACV2D,YAAY,SACZd,OAAO,UACPpD,QAAS4D,EAVX,UAYGlE,EAAKF,KACLqE,IAAUnE,EAAKV,KAAO,4CACvB,cAAC,IAAD,CAAWmF,GAAI,QCwBNC,EAvCM,SAAC,GAA8B,IAA5BR,EAA2B,EAA3BA,eAAgBlE,EAAW,EAAXA,KAGvC,OACC,eAAC,IAAD,CACCM,QAAS4D,EACTR,OAAO,UACPiB,GAAG,UACHC,OAAQ,CACPC,WAAY,UACZC,MAAO,SAERC,EAAE,OACFxE,EAAE,OACFU,WAAW,SACX6D,MAAM,QACNV,GAAI,EACJC,GAAI,EACJC,GAAI,EACJpD,aAAa,KAfd,UAiBC,cAAC,IAAD,CACCuC,GAAI,EACJ/C,KAAK,KACLgD,OAAO,UACP5D,KAAME,EAAKF,KACXsB,IAAKpB,EAAKqB,MAEX,eAAC,IAAD,WACC,cAAC,IAAD,UAAOrB,EAAKF,OACZ,eAAC,IAAD,CAAMe,SAAS,KAAf,UACC,yCACCb,EAAKwB,gBCqPIwD,EAjQc,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACzD,EAAoCjF,cAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QACxB,EAA0CyB,qBAA1C,mBAAOsD,EAAP,KAAsBC,EAAtB,KACA,EAA4BvD,mBAAS,IAArC,mBAAOwD,EAAP,KAAeC,EAAf,KACA,EAAwCzD,mBAAS,IAAjD,mBAAO0D,EAAP,KAAqBC,EAArB,KACA,EAA8B3D,oBAAS,GAAvC,mBAAO4D,EAAP,KAAgBC,EAAhB,KACA,EAA0C7D,oBAAS,GAAnD,mBAAO8D,EAAP,KAAsBC,EAAtB,KACMC,EAAQC,cAEd,EAAgDpE,IAAxCI,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBAAiBhC,EAAvC,EAAuCA,KAEjCgG,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDACnBX,EAAUU,GACLA,EAFc,iEAOjBN,GAAW,GACLQ,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYrG,EAAKsG,SAVjB,SAaMC,IAAMC,IAAN,2BAA8BlB,GAAUa,GAb9C,gBAaTM,EAbS,EAaTA,KACRC,QAAQC,IAAIF,GACZd,GAAW,GACXF,EAAgBgB,GAhBC,kDAkBjBX,EAAM,CACJc,MAAO,iBACPC,YAAa,oCACbC,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBAEZtB,GAAW,GA1BM,0DAAH,sDA8BZuB,EAAY,uCAAG,gCAAAhB,EAAA,yDACdd,EADc,iEAIjBS,GAAiB,GACXM,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYrG,EAAKsG,SAPjB,SAUMC,IAAMY,IAAN,mBAErB,CACEC,OAAQrF,EAAazC,IACrB+H,SAAUjC,GAEZe,GAhBe,gBAUTM,EAVS,EAUTA,KASRC,QAAQC,IAAIF,EAAKnH,KAEjB0C,EAAgByE,GAChBtB,GAAeD,GACfW,GAAiB,GAvBA,kDAyBjBC,EAAM,CACJc,MAAO,iBACPC,YAAa,KAAMS,SAASb,KAAKc,QACjCT,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZpB,GAAiB,GAjCA,QAmCnBR,EAAiB,IAnCE,0DAAH,qDAsCZmC,EAAa,uCAAG,WAAOC,GAAP,mBAAAvB,EAAA,0DAChBnE,EAAalC,MAAM6H,MAAK,SAACC,GAAD,OAAOA,EAAErI,MAAQmI,EAAMnI,OAD/B,uBAElBwG,EAAM,CACJc,MAAO,yBACPE,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAPM,6BAYhBlF,EAAa6F,WAAWtI,MAAQU,EAAKV,IAZrB,uBAalBwG,EAAM,CACJc,MAAO,+BACPE,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAlBM,0CAwBlBtB,GAAW,GACLQ,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYrG,EAAKsG,SA3BhB,UA8BKC,IAAMY,IAAN,qBAErB,CACEC,OAAQrF,EAAazC,IACrBH,OAAQsI,EAAMnI,KAEhB6G,GApCgB,iBA8BVM,EA9BU,EA8BVA,KASRzE,EAAgByE,GAChBtB,GAAeD,GACfS,GAAW,GAzCO,kDA2ClBG,EAAM,CACJc,MAAO,iBACPC,YAAa,KAAMS,SAASb,KAAKc,QACjCT,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZtB,GAAW,GAnDO,QAqDpBN,EAAiB,IArDG,0DAAH,sDAwDbwC,GAAY,uCAAG,WAAOJ,GAAP,mBAAAvB,EAAA,yDACfnE,EAAa6F,WAAWtI,MAAQU,EAAKV,KAAOmI,EAAMnI,MAAQU,EAAKV,IADhD,uBAEjBwG,EAAM,CACJc,MAAO,kCACPE,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAPK,0CAajBtB,GAAW,GACLQ,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYrG,EAAKsG,SAhBjB,SAmBMC,IAAMY,IAAN,wBAErB,CACEC,OAAQrF,EAAazC,IACrBH,OAAQsI,EAAMnI,KAEhB6G,GAzBe,gBAmBTM,EAnBS,EAmBTA,KASRgB,EAAMnI,MAAQU,EAAKV,IAAM0C,IAAoBA,EAAgByE,GAC7DtB,GAAeD,GACfD,IACAU,GAAW,GA/BM,kDAiCjBG,EAAM,CACJc,MAAO,iBACPC,YAAa,KAAMS,SAASb,KAAKc,QACjCT,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEZtB,GAAW,GAzCM,QA2CnBN,EAAiB,IA3CE,0DAAH,sDA8ClB,OACE,qCACE,cAAC,IAAD,CAAY9E,EAAG,CAAEC,KAAM,QAAUC,KAAM,cAAC,IAAD,IAAcH,QAASF,IAE9D,eAAC,IAAD,CAAOC,QAASA,EAASF,OAAQA,EAAQQ,YAAU,EAAnD,UACE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEE,SAAS,OACTC,WAAW,YACXP,EAAE,OACFQ,eAAe,SAJjB,SAMGgB,EAAasF,WAGhB,cAAC,IAAD,IACA,eAAC,IAAD,CAAW9G,EAAE,OAAOS,QAAQ,SAASC,WAAW,SAAhD,UACE,cAAC,IAAD,CAAK8D,EAAE,OAAOxE,EAAE,OAAOuH,SAAS,OAAOC,GAAI,EAA3C,SACGhG,EAAalC,MAAMqD,KAAI,SAACyE,GAAD,OACtB,cAAC,EAAD,CAEE3H,KAAM2H,EACNxD,MAAOpC,EAAa6F,WACpB1D,eAAgB,kBAAM2D,GAAaF,KAH9BA,EAAErI,UAOb,eAAC,IAAD,CAAaiB,EAAE,OAAf,UACE,cAAC,IAAD,CACEyH,YAAY,YACZ1D,GAAI,EACJtB,MAAOoC,EACP6C,SAAU,SAACC,GAAD,OAAO7C,EAAiB6C,EAAEC,OAAOnF,UAE7C,cAAC,IAAD,CACEuB,QAAQ,QACRC,YAAY,OACZ4D,GAAI,EACJC,UAAWzC,EACXtF,QAAS4G,EALX,uBAUF,cAAC,IAAD,UACE,cAAC,IAAD,CACEc,YAAY,oBACZ1D,GAAI,EACJ2D,SAAU,SAACC,GAAD,OAAOlC,EAAakC,EAAEC,OAAOnF,YAI1C0C,EACC,cAAC,IAAD,CAAShF,KAAK,OADR,OAGN8E,QAHM,IAGNA,OAHM,EAGNA,EAActC,KAAI,SAAClD,GAAD,OAChB,cAAC,EAAD,CAEEA,KAAMA,EACNkE,eAAgB,kBAAMsD,EAAcxH,KAF/BA,EAAKV,WAOlB,cAAC,IAAD,UACE,cAAC,IAAD,CAAQgB,QAAS,kBAAMuH,GAAa7H,IAAOwE,YAAY,MAAvD,qCPPG8D,EAnPI,SAAC,GAAmC,IAAjCpD,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACjC,EAAgCrD,mBAAS,IAAzC,mBAAO9C,EAAP,KAAiBuJ,EAAjB,KACA,EAA8BzG,oBAAS,GAAvC,mBAAO4D,EAAP,KAAgBC,EAAhB,KACA,EAAoC7D,mBAAS,IAA7C,mBAAO0G,EAAP,KAAmBC,EAAnB,KACA,EAA8C3G,oBAAS,GAAvD,mBAAO4G,EAAP,KAAwBC,EAAxB,KACA,EAA4B7G,oBAAS,GAArC,mBAAO8G,EAAP,KAAeC,EAAf,KACA,EAAgC/G,oBAAS,GAAzC,mBAAOgH,EAAP,KAAiBC,EAAjB,KACMjD,EAAQC,cAERiD,EAAiB,CACtBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,CACjBC,oBAAqB,mBAGvB,EACC1H,IADOI,GAAR,EAAQA,aAAcC,GAAtB,EAAsBA,gBAAiBhC,GAAvC,EAAuCA,KAAMkC,GAA7C,EAA6CA,aAAcC,GAA3D,EAA2DA,gBAGrD8C,GAAa,uCAAG,gCAAAiB,EAAA,yDAChBnE,GADgB,iEAIdoE,EAAS,CACdC,QAAS,CACRC,cAAc,UAAD,OAAYrG,GAAKsG,SAIhCX,GAAW,GAVS,SAYGY,IAAMC,IAAN,uBACNzE,GAAazC,KAC7B6G,GAdmB,gBAYZM,EAZY,EAYZA,KAIR8B,EAAY9B,GACZd,GAAW,GAEX9G,EAAOyK,KAAK,YAAavH,GAAazC,KAnBlB,kDAqBpBwG,EAAM,CACLc,MAAO,iBACPC,YAAa,8BACbC,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WA3BS,0DAAH,qDAgCbsC,GAAW,uCAAG,WAAOC,GAAP,mBAAAtD,EAAA,yDACD,UAAdsD,EAAMC,MAAmBjB,EADV,wBAElB3J,EAAOyK,KAAK,cAAevH,GAAazC,KAFtB,SAIX6G,EAAS,CACdC,QAAS,CACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYrG,GAAKsG,SAGhCmC,EAAc,IAVG,SAWMlC,IAAMmD,KAC5B,eACA,CACC1F,QAASwE,EACTpB,OAAQrF,IAEToE,GAjBgB,gBAWTM,EAXS,EAWTA,KAQR5H,EAAOyK,KAAK,cAAe7C,GAC3B8B,EAAY,GAAD,mBAAKvJ,GAAL,CAAeyH,KApBT,kDAsBjBX,EAAM,CACLc,MAAO,iBACPC,YAAa,6BACbC,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WA5BM,0DAAH,sDAkCjBzE,qBAAU,YACT3D,EAAS8K,YA3FM,uCA4FRL,KAAK,QAAStJ,IACrBnB,EAAO+K,GAAG,aAAa,kBAAMjB,GAAmB,MAChD9J,EAAO+K,GAAG,UAAU,kBAAMb,GAAY,MACtClK,EAAO+K,GAAG,eAAe,kBAAMb,GAAY,QAGzC,IAEHvG,qBAAU,WACTyC,KAEAnG,EAAsBiD,KAEpB,CAACA,KAEJS,qBAAU,WACT3D,EAAO+K,GAAG,oBAAoB,SAACC,GAE5B/K,GACDA,EAAoBQ,MAAQuK,EAAmBC,KAAKxK,IAOpDiJ,EAAY,GAAD,mBAAKvJ,GAAL,CAAe6K,KALrB3H,GAAa6H,SAASF,KAC1B1H,GAAgB,CAAC0H,GAAF,mBAAyB3H,MACxCiD,GAAeD,UAQnB,IChG6BtF,GAAYC,GDqHzC,OACC,mCACEkC,GACA,qCACC,eAAC,IAAD,CACClB,SAAU,CAAEL,KAAM,OAAQe,GAAI,QAC9BwG,GAAI,EACJ3D,GAAI,EACJW,EAAE,OACFjE,WAAW,YACXP,EAAE,OACFQ,eAAgB,CAAEP,KAAM,iBACxBS,WAAW,SARZ,UAUC,cAAC,IAAD,CACCV,EAAG,CAAEC,KAAM,OAAQe,GAAI,QACvBd,KAAM,cAAC,IAAD,IACNH,QAAS,kBAAM0B,GAAgB,OAE/BhD,IACE+C,GAAaiI,YAQd,qCACEjI,GAAasF,SAAS4C,cACvB,cAAC,EAAD,CACChF,cAAeA,GACfC,WAAYA,EACZC,cAAeA,OAZjB,qCACExF,EAAUK,GAAM+B,GAAalC,OAC9B,cAAC,EAAD,CACCG,MC7IoBJ,GD6IAI,GC7IYH,GD6INkC,GAAalC,MC5IzCA,GAAM,GAAGP,MAAQM,GAAWN,IAAMO,GAAM,GAAKA,GAAM,aD0JtD,eAAC,IAAD,CACCU,EAAE,OACFS,QAAQ,SACRD,eAAe,WACfmJ,EAAG,EACHvF,GAAG,UACHI,EAAE,OACFnE,EAAE,OACFM,aAAa,KACbiJ,UAAU,SATX,UAWEzE,EACA,cAAC,IAAD,CACChF,KAAK,KACLqE,EAAG,GACHnE,EAAG,GACHwJ,UAAU,SACVC,OAAO,SAGR,qBAAKC,UAAU,WAAf,SACC,cAAC,EAAD,CAAgBtL,SAAUA,MAI5B,eAAC,IAAD,CACCuL,UAAWhB,GACXiB,GAAG,aACHC,YAAU,EACVjH,GAAI,EAJL,UAMEsF,EACA,8BACC,cAAC,IAAD,CACC4B,QAAS1B,EAET2B,MAAO,GACPxH,MAAO,CAAEyH,aAAc,GAAIhH,WAAY,OAIzC,6BAED,cAAC,IAAD,CACCW,QAAQ,SACRI,GAAG,UACHqD,YAAY,oBACZhF,MAAOwF,EACPP,SA3Ge,SAACC,GAGtB,GAFAO,EAAcP,EAAEC,OAAOnF,OAElB0F,EAAL,CAEKE,IACJC,GAAU,GACVhK,EAAOyK,KAAK,SAAUvH,GAAazC,MAEpC,IAAIuL,GAAiB,IAAIC,MAAOC,UAEhCC,YAAW,YACI,IAAIF,MAAOC,UACAF,GAHR,KAIcjC,IAC9B/J,EAAOyK,KAAK,cAAevH,GAAazC,KACxCuJ,GAAU,MANM,kBAwGhB,cAAC,IAAD,CAAKtI,EAAE,OAAOU,WAAW,SAASF,eAAe,SAASH,EAAE,OAA5D,SACC,cAAC,IAAD,CAAMC,SAAS,MAAMkH,GAAI,EAAGjH,WAAW,YAAvC,oDQvOUmK,EAnBC,SAAC,GAAmC,IAAjC/F,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACrBpD,EAAiBJ,IAAjBI,aAER,OACE,cAAC,IAAD,CACExB,EAAG,CAAEC,KAAMuB,EAAe,OAAS,OAAQR,GAAI,QAC/CN,WAAW,SACXD,QAAQ,SACRkJ,EAAG,EACHvF,GAAG,QACHI,EAAG,CAAEvE,KAAM,OAAQe,GAAI,OACvBL,aAAa,KACbgK,YAAY,MARd,SAUE,cAAC,EAAD,CAAYhG,WAAYA,EAAYC,cAAeA,O,QCG1CgG,EAnBK,WAClB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUC,OAAO,SACjB,cAAC,IAAD,CAAUA,OAAO,SACjB,cAAC,IAAD,CAAUA,OAAO,SACjB,cAAC,IAAD,CAAUA,OAAO,SACjB,cAAC,IAAD,CAAUA,OAAO,SACjB,cAAC,IAAD,CAAUA,OAAO,SACjB,cAAC,IAAD,CAAUA,OAAO,SACjB,cAAC,IAAD,CAAUA,OAAO,SACjB,cAAC,IAAD,CAAUA,OAAO,SACjB,cAAC,IAAD,CAAUA,OAAO,SACjB,cAAC,IAAD,CAAUA,OAAO,SACjB,cAAC,IAAD,CAAUA,OAAO,aCkGRC,EA1GC,SAAC,GAAoB,IAAlBnG,EAAiB,EAAjBA,WAClB,EAAoCpD,qBAApC,mBAAOlC,EAAP,KAAmB0L,EAAnB,KAEA,EAAiE3J,IAAzDI,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBAAiBhC,EAAvC,EAAuCA,KAAMoC,EAA7C,EAA6CA,MAAOC,EAApD,EAAoDA,SAE9CyD,EAAQC,cAERwF,EAAU,uCAAG,gCAAArF,EAAA,sEAGXC,EAAS,CACdC,QAAS,CACRC,cAAc,UAAD,OAAYrG,EAAKsG,SALf,SASMC,IAAMC,IAAI,YAAaL,GAT7B,gBASTM,EATS,EASTA,KACRpE,EAASoE,GAVQ,gDAYjBX,EAAM,CACLc,MAAO,iBACPC,YAAa,2BACbC,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBAlBM,yDAAH,qDA6BhB,OANAzE,qBAAU,WACT8I,EAAc5I,KAAKC,MAAMC,aAAaC,QAAQ,cAC9C0I,MAEE,CAACrG,IAGH,eAAC,IAAD,CACC3E,EAAG,CAAEC,KAAMuB,EAAe,OAAS,OAAQR,GAAI,QAC/CP,QAAQ,SACRC,WAAW,SACXiJ,EAAG,EACHvF,GAAG,QACHI,EAAG,CAAEvE,KAAM,OAAQe,GAAI,OACvBL,aAAa,KACbgK,YAAY,MARb,UAUC,cAAC,IAAD,CACCnD,GAAI,EACJ3D,GAAI,EACJvD,SAAU,CAAEL,KAAM,OAAQe,GAAI,QAC9BT,WAAW,YACXP,EAAE,OACFwE,EAAE,OACFhE,eAAe,gBACfE,WAAW,SARZ,sBAYA,cAAC,IAAD,CACCV,EAAE,OACFS,QAAQ,SACRkJ,EAAG,EACHvF,GAAG,UACHI,EAAE,OACFnE,EAAE,OACFM,aAAa,KACbiJ,UAAU,SARX,SAUE/H,EACA,cAAC,IAAD,CAAO+H,UAAU,SAAjB,SACE/H,EAAMc,KAAI,SAAC4G,GAAD,OACV,eAAC,IAAD,CACCxJ,QAAS,kBAAM0B,EAAgB8H,IAC/BpG,OAAO,UACPiB,GAAI5C,IAAiB+H,EAAO,UAAY,UACxChF,MAAO/C,IAAiB+H,EAAO,QAAU,QACzC1F,GAAI,EACJC,GAAI,EACJnD,aAAa,KAPd,UAUC,cAAC,IAAD,UACG4I,EAAKE,YAEJF,EAAKzC,SADL1H,EAAUC,EAAYkK,EAAKjK,SAG9BiK,EAAK0B,eACL,eAAC,IAAD,CAAM3K,SAAS,KAAf,UACC,8BAAIiJ,EAAK0B,cAAcnM,OAAOS,KAA9B,SACCgK,EAAK0B,cAAcxH,QAAQ5E,OAAS,GAClC0K,EAAK0B,cAAcxH,QAAQyH,UAAU,EAAG,IAAM,MAC9C3B,EAAK0B,cAAcxH,aAZnB8F,EAAKxK,UAmBb,cAAC,EAAD,U,2BCsHUoM,OAhMf,WACC,MAA4B5J,mBAAS,IAArC,mBAAOwD,EAAP,KAAeC,EAAf,KACA,EAAwCzD,mBAAS,IAAjD,mBAAO0D,EAAP,KAAqBC,EAArB,KACA,EAA8B3D,oBAAS,GAAvC,mBAAO4D,EAAP,KAAgBC,EAAhB,KACA,EAAsC7D,oBAAS,GAA/C,mBAAO6J,EAAP,KAAoBC,EAApB,KAEA,EAOIjK,IANHK,EADD,EACCA,gBACAhC,EAFD,EAECA,KACAkC,EAHD,EAGCA,aACAC,EAJD,EAICA,gBACAC,EALD,EAKCA,MACAC,EAND,EAMCA,SAGKyD,EAAQC,cACd,EAAoC7F,cAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAClBiC,EAAUC,cAOVyD,GAAY,uCAAG,gCAAAE,EAAA,yDACfZ,EADe,uBAEnBQ,EAAM,CACLc,MAAO,mCACPE,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,aAPQ,0CAanBtB,GAAW,GAELQ,EAAS,CACdC,QAAS,CACRC,cAAc,UAAD,OAAYrG,EAAKsG,SAjBb,SAqBIC,IAAMC,IAAN,2BAA8BlB,GAAUa,GArB5C,gBAqBXM,EArBW,EAqBXA,KAERd,GAAW,GACXF,EAAgBgB,GAxBG,kDA0BnBX,EAAM,CACLc,MAAO,iBACPC,YAAa,oCACbC,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBAhCQ,0DAAH,qDAqCZ4E,GAAU,uCAAG,WAAO1M,GAAP,mBAAA+G,EAAA,6DAClBQ,QAAQC,IAAIxH,GADM,SAIjByM,GAAe,GACTzF,EAAS,CACdC,QAAS,CACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYrG,EAAKsG,SARf,SAWMC,IAAMmD,KAAN,YAAwB,CAAEvK,UAAUgH,GAX1C,gBAWTM,EAXS,EAWTA,KAEHrE,EAAMsF,MAAK,SAACoE,GAAD,OAAOA,EAAExM,MAAQmH,EAAKnH,QAAM+C,EAAS,CAACoE,GAAF,mBAAWrE,KAC/DJ,EAAgByE,GAChBmF,GAAe,GACfvL,IAhBiB,kDAkBjByF,EAAM,CACLc,MAAO,0BACPC,YAAa,KAAMU,QACnBT,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,gBAxBM,0DAAH,sDA6BhB,OACC,qCACC,eAAC,IAAD,CACC1G,EAAE,OACFQ,eAAe,gBACfE,WAAW,SACX0D,GAAG,QACHI,EAAE,OACFmF,EAAE,oBACFgB,YAAY,MAPb,UASC,cAAC,IAAD,CAAS7H,MAAM,uBAAuBE,UAAQ,EAACD,UAAU,aAAzD,SACC,eAAC,IAAD,CAAQiB,QAAQ,QAAQjE,QAASF,EAAjC,UACC,mBAAGkK,UAAU,kBACb,cAAC,IAAD,CAAM/J,EAAG,CAAEC,KAAM,OAAQe,GAAI,QAAU6C,GAAI,EAA3C,8BAKF,cAAC,IAAD,CAAMvD,SAAS,MAAMC,WAAW,YAAhC,qBAGA,gCACC,eAAC,IAAD,WACC,eAAC,IAAD,CAAYoJ,EAAG,EAAf,UACC,cAAC,KAAD,CACC6B,MAAO7J,EAAa9C,OACpB4M,OAAQC,SAAOC,QAEhB,cAAC,IAAD,CAAUrL,SAAS,MAAM5B,EAAG,OAE7B,eAAC,IAAD,CAAUwF,GAAI,EAAd,WACGvC,EAAa9C,QAAU,kBACxB8C,EAAagB,KAAI,SAACiJ,GAAD,OACjB,cAAC,IAAD,CAEC7L,QAAS,WACR0B,EAAgBmK,EAAMrC,MACtB3H,EAAgBD,EAAakK,QAAO,SAACC,GAAD,OAAOA,IAAMF,OAJnD,SAOEA,EAAMrC,KAAKE,YAAX,yBACoBmC,EAAMrC,KAAKzC,UAD/B,2BAEsB1H,EAAUK,EAAMmM,EAAMrC,KAAKjK,SAR7CsM,EAAM7M,cAaf,eAAC,IAAD,WACC,cAAC,IAAD,CAAYgN,GAAIC,IAAQ5H,GAAG,QAAQ6H,UAAW,cAAC,IAAD,IAA9C,SACC,cAAC,IAAD,CACC9L,KAAK,KACLgD,OAAO,UACP5D,KAAME,EAAKF,KACXsB,IAAKpB,EAAKqB,QAGZ,eAAC,IAAD,WACC,eAAC,EAAD,CAAcrB,KAAMA,EAApB,UACC,cAAC,IAAD,yBAAgC,OAEjC,cAAC,IAAD,IACA,cAAC,IAAD,CAAUM,QArIM,WACrBsC,aAAa6J,WAAW,YACxBnK,EAAQQ,KAAK,MAmIR,gCAMJ,eAAC,IAAD,CAAQQ,UAAU,OAAOjD,QAASA,EAASF,OAAQA,EAAnD,UACC,cAAC,IAAD,IACA,eAAC,IAAD,WACC,cAAC,IAAD,CAAcuM,kBAAkB,MAAhC,0BACA,eAAC,IAAD,WACC,eAAC,IAAD,CAAKnM,EAAE,OAAOwH,GAAI,EAAlB,UACC,cAAC,IAAD,CACCC,YAAY,0BACZvE,GAAI,EACJT,MAAOsC,EACP2C,SAAU,SAACC,GAAD,OAAO3C,EAAU2C,EAAEC,OAAOnF,UAErC,cAAC,IAAD,CAAQ1C,QAAS0F,GAAjB,mBAEAN,EACA,cAAC,EAAD,IADO,OAGPF,QAHO,IAGPA,OAHO,EAGPA,EAActC,KAAI,SAAClD,GAAD,OACjB,cAAC,EAAD,CAECA,KAAMA,EACNkE,eAAgB,kBAAM2H,GAAW7L,EAAKV,OAFjCU,EAAKV,QAOZqM,GAAe,cAAC,IAAD,CAASvD,GAAG,OAAO7H,EAAE,sBClM5BoM,GAjBE,WAChB,MAAoC7K,oBAAS,GAA7C,mBAAOoD,EAAP,KAAmBC,EAAnB,KACQnF,EAAS2B,IAAT3B,KAER,OACC,sBAAKmD,MAAO,CAAEwH,MAAO,QAArB,UACE3K,GAAQ,cAAC,GAAD,IACT,eAAC,IAAD,CAAKO,EAAE,OAAOQ,eAAe,gBAAgBgE,EAAE,OAAOnE,EAAE,SAASsJ,EAAE,OAAnE,UACElK,GAAQ,cAAC,EAAD,CAASkF,WAAYA,IAC7BlF,GACA,cAAC,EAAD,CAASkF,WAAYA,EAAYC,cAAeA,W,UC0GtCyH,GAhHD,WACb,MAAwB9K,oBAAS,GAAjC,mBAAO+K,EAAP,KAAaC,EAAb,KAEMhH,EAAQC,cACRzD,EAAUC,cAChB,EAA0BT,mBAAS,IAAnC,mBAAON,EAAP,KAAcuL,EAAd,KACA,EAAgCjL,mBAAS,IAAzC,mBAAOkL,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,gCAAAhH,EAAA,yDAChB1E,GAAUwL,EADM,uBAEpBlH,EAAM,CACLc,MAAO,6BACPE,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAPS,0CAedd,EAAS,CACdC,QAAS,CACR,eAAgB,qBAjBE,SAqBGG,IAAMmD,KAC5B,kBACA,CAAElI,QAAOwL,YACT7G,GAxBmB,gBAqBZM,EArBY,EAqBZA,KAORX,EAAM,CACLc,MAAO,mBACPE,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEXrE,aAAauK,QAAQ,WAAYzK,KAAK0K,UAAU3G,IAEhDnE,EAAQQ,KAAK,UAEbkI,YAAW,WACVqC,SAASC,SAASC,WAChB,KAzCiB,kDA2CpBzH,EAAM,CACLc,MAAO,iBACPC,YAAa,KAAMS,SAASb,KAAKc,QACjCT,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAjDS,0DAAH,qDAsDnB,OACC,eAAC,IAAD,CAAQuG,QAAQ,OAAhB,UACC,eAAC,IAAD,CAAahD,GAAG,QAAQC,YAAU,EAAlC,UACC,cAAC,IAAD,4BACA,cAAC,IAAD,CACCzH,MAAOxB,EACPiM,KAAK,QACLzF,YAAY,2BACZC,SAAU,SAACC,GAAD,OAAO6E,EAAS7E,EAAEC,OAAOnF,aAGrC,eAAC,IAAD,CAAawH,GAAG,WAAWC,YAAU,EAArC,UACC,cAAC,IAAD,uBACA,eAAC,IAAD,CAAY/J,KAAK,KAAjB,UACC,cAAC,IAAD,CACCsC,MAAOgK,EACP/E,SAAU,SAACC,GAAD,OAAO+E,EAAY/E,EAAEC,OAAOnF,QACtCyK,KAAMZ,EAAO,OAAS,WACtB7E,YAAY,mBAEb,cAAC,IAAD,CAAmB2C,MAAM,SAAzB,SACC,cAAC,IAAD,CAAQ/J,EAAE,UAAUF,KAAK,KAAKJ,QAjFf,kBAAMwM,GAASD,IAiF9B,SACEA,EAAO,OAAS,iBAKrB,cAAC,IAAD,CACCrI,YAAY,OACZmG,MAAM,OACNxH,MAAO,CAAEU,UAAW,IACpBvD,QAAS4M,EAJV,mBAQA,cAAC,IAAD,CACC5C,UAAU,mBACV/F,QAAQ,QACRC,YAAY,QACZlE,QAAS,WACRyM,EAAS,iBACTE,EAAY,SANd,uBC+CYS,GAhJA,WACd,IAAM5H,EAAQC,cACRzD,EAAUC,cAEhB,EAAwBT,oBAAS,GAAjC,mBAAO+K,EAAP,KAAaC,EAAb,KAEA,EAAwBhL,qBAAxB,mBAAOhC,EAAP,KAAa6N,EAAb,KACA,EAA0B7L,qBAA1B,mBAAON,EAAP,KAAcuL,EAAd,KACA,EAA8CjL,qBAA9C,mBAAO8L,EAAP,KAAwBC,EAAxB,KACA,EAAgC/L,qBAAhC,mBAAOkL,EAAP,KAAiBC,EAAjB,KACA,EAAsBnL,mBACrB,wDADD,mBAAOT,EAAP,KAIMyM,GAJN,KAIoB,WACnBhB,GAASD,KAGJK,EAAa,uCAAG,gCAAAhH,EAAA,yDAChBpG,GAAS0B,GAAUwL,GAAaY,EADhB,uBAEpB9H,EAAM,CACLc,MAAO,6BACPE,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAPS,6BAYjB+F,IAAaY,EAZI,uBAapB9H,EAAM,CACLc,MAAO,yBACPE,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAlBS,iCAsBrBP,QAAQC,IAAI7G,EAAM0B,EAAOwL,EAAU3L,GAtBd,SAwBd8E,EAAS,CACdC,QAAS,CACR,eAAgB,qBA1BE,UA8BGG,IAAMmD,KAC5B,YACA,CACC5J,OACA0B,QACAwL,WACA3L,OAED8E,GAtCmB,iBA8BZM,EA9BY,EA8BZA,KAURC,QAAQC,IAAIF,GACZX,EAAM,CACLc,MAAO,0BACPE,OAAQ,UACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WAEXrE,aAAauK,QAAQ,WAAYzK,KAAK0K,UAAU3G,IAEhDnE,EAAQQ,KAAK,UACbkI,YAAW,WACVqC,SAASC,SAASC,WAChB,KArDiB,kDAuDpBzH,EAAM,CACLc,MAAO,iBACPC,YAAa,KAAMS,SAASb,KAAKc,QACjCT,OAAQ,QACRC,SAAU,IACVC,YAAY,EACZC,SAAU,WA7DS,0DAAH,qDAkEnB,OACC,eAAC,IAAD,CAAQuG,QAAQ,MAAhB,UACC,eAAC,IAAD,CAAahD,GAAG,aAAaC,YAAU,EAAvC,UACC,cAAC,IAAD,mBACA,cAAC,IAAD,CACCzC,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAOyF,EAAQzF,EAAEC,OAAOnF,aAGpC,eAAC,IAAD,CAAawH,GAAG,QAAQC,YAAU,EAAlC,UACC,cAAC,IAAD,4BACA,cAAC,IAAD,CACCgD,KAAK,QACLzF,YAAY,2BACZC,SAAU,SAACC,GAAD,OAAO6E,EAAS7E,EAAEC,OAAOnF,aAGrC,eAAC,IAAD,CAAawH,GAAG,WAAWC,YAAU,EAArC,UACC,cAAC,IAAD,uBACA,eAAC,IAAD,CAAY/J,KAAK,KAAjB,UACC,cAAC,IAAD,CACC+M,KAAMZ,EAAO,OAAS,WACtB7E,YAAY,iBACZC,SAAU,SAACC,GAAD,OAAO+E,EAAY/E,EAAEC,OAAOnF,UAEvC,cAAC,IAAD,CAAmB2H,MAAM,SAAzB,SACC,cAAC,IAAD,CAAQ/J,EAAE,UAAUF,KAAK,KAAKJ,QAASwN,EAAvC,SACEjB,EAAO,OAAS,iBAKrB,eAAC,IAAD,CAAarC,GAAG,kBAAkBC,YAAU,EAA5C,UACC,cAAC,IAAD,+BACA,eAAC,IAAD,CAAY/J,KAAK,KAAjB,UACC,cAAC,IAAD,CACC+M,KAAMZ,EAAO,OAAS,WACtB7E,YAAY,mBACZC,SAAU,SAACC,GAAD,OAAO2F,EAAmB3F,EAAEC,OAAOnF,UAE9C,cAAC,IAAD,CAAmB2H,MAAM,SAAzB,SACC,cAAC,IAAD,CAAQ/J,EAAE,UAAUF,KAAK,KAAKJ,QAASwN,EAAvC,SACEjB,EAAO,OAAS,iBAMrB,cAAC,IAAD,CACCrI,YAAY,OACZmG,MAAM,OACNxH,MAAO,CAAEU,UAAW,IACpBvD,QAAS4M,EAJV,yBCnFYa,GA7CE,WAChB,IAAMzL,EAAUC,cAQhB,OANAC,qBAAU,WACIE,KAAKC,MAAMC,aAAaC,QAAQ,cAEnCP,EAAQQ,KAAK,YACrB,CAACR,IAGH,eAAC,IAAD,CAAW0L,KAAK,KAAKC,eAAa,EAAlC,UACC,cAAC,IAAD,CACC1N,EAAE,OACFQ,eAAe,SACfmJ,EAAG,EACHvF,GAAI,QACJI,EAAE,OACF9F,EAAE,gBACFiC,aAAa,KACbgK,YAAY,MARb,SAUC,cAAC,IAAD,CAAMrK,SAAS,MAAMC,WAAW,YAAYgE,MAAM,QAAlD,uBAID,cAAC,IAAD,CAAKH,GAAG,QAAQI,EAAE,OAAOmF,EAAG,EAAGhJ,aAAa,KAAKgK,YAAY,MAA7D,SACC,eAAC,KAAD,CAAMgD,UAAQ,EAAC3J,QAAQ,eAAvB,UACC,eAAC,KAAD,CAASD,GAAG,MAAZ,UACC,cAAC,KAAD,oBACA,cAAC,KAAD,yBAED,eAAC,KAAD,WACC,cAAC,KAAD,UACC,cAAC,GAAD,MAED,cAAC,KAAD,UACC,cAAC,GAAD,kBCpCQ6J,OATf,WACC,OACC,sBAAK7D,UAAU,MAAf,UACC,cAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,IAAIC,UAAWP,KACjC,cAAC,IAAD,CAAOM,KAAK,SAASC,UAAW3B,S,kBCFnC4B,IAASC,OACR,cAAC,KAAD,UACC,cAAC,EAAD,UACC,cAAC,KAAD,UACC,cAAC,GAAD,UAIHnB,SAASoB,eAAe,W","file":"static/js/main.faf18052.chunk.js","sourcesContent":["import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = \"https://chatzzz-mern.herokuapp.com\";\r\n//\"http://localhost:5000\" // \"https://chatzzz-mern.herokuapp.com\"; -> After deployment\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n\tconst [messages, setMessages] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [newMessage, setNewMessage] = useState(\"\");\r\n\tconst [socketConnected, setSocketConnected] = useState(false);\r\n\tconst [typing, setTyping] = useState(false);\r\n\tconst [istyping, setIsTyping] = useState(false);\r\n\tconst toast = useToast();\r\n\r\n\tconst defaultOptions = {\r\n\t\tloop: true,\r\n\t\tautoplay: true,\r\n\t\tanimationData: animationData,\r\n\t\trendererSettings: {\r\n\t\t\tpreserveAspectRatio: \"xMidYMid slice\",\r\n\t\t},\r\n\t};\r\n\tconst { selectedChat, setSelectedChat, user, notification, setNotification } =\r\n\t\tChatState();\r\n\r\n\tconst fetchMessages = async () => {\r\n\t\tif (!selectedChat) return;\r\n\r\n\t\ttry {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${user.token}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t`/api/message/${selectedChat._id}`,\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\t\t\tsetMessages(data);\r\n\t\t\tsetLoading(false);\r\n\r\n\t\t\tsocket.emit(\"join chat\", selectedChat._id);\r\n\t\t} catch (error) {\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Error Occured!\",\r\n\t\t\t\tdescription: \"Failed to Load the Messages\",\r\n\t\t\t\tstatus: \"error\",\r\n\t\t\t\tduration: 5000,\r\n\t\t\t\tisClosable: true,\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst sendMessage = async (event) => {\r\n\t\tif (event.key === \"Enter\" && newMessage) {\r\n\t\t\tsocket.emit(\"stop typing\", selectedChat._id);\r\n\t\t\ttry {\r\n\t\t\t\tconst config = {\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t\t\tAuthorization: `Bearer ${user.token}`,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tsetNewMessage(\"\");\r\n\t\t\t\tconst { data } = await axios.post(\r\n\t\t\t\t\t\"/api/message\",\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcontent: newMessage,\r\n\t\t\t\t\t\tchatId: selectedChat,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tconfig\r\n\t\t\t\t);\r\n\t\t\t\tsocket.emit(\"new message\", data);\r\n\t\t\t\tsetMessages([...messages, data]);\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast({\r\n\t\t\t\t\ttitle: \"Error Occured!\",\r\n\t\t\t\t\tdescription: \"Failed to send the Message\",\r\n\t\t\t\t\tstatus: \"error\",\r\n\t\t\t\t\tduration: 5000,\r\n\t\t\t\t\tisClosable: true,\r\n\t\t\t\t\tposition: \"bottom\",\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket = io(ENDPOINT);\r\n\t\tsocket.emit(\"setup\", user);\r\n\t\tsocket.on(\"connected\", () => setSocketConnected(true));\r\n\t\tsocket.on(\"typing\", () => setIsTyping(true));\r\n\t\tsocket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n\t\t// eslint-disable-next-line\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchMessages();\r\n\r\n\t\tselectedChatCompare = selectedChat;\r\n\t\t// eslint-disable-next-line\r\n\t}, [selectedChat]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on(\"message recieved\", (newMessageRecieved) => {\r\n\t\t\tif (\r\n\t\t\t\t!selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n\t\t\t\tselectedChatCompare._id !== newMessageRecieved.chat._id\r\n\t\t\t) {\r\n\t\t\t\tif (!notification.includes(newMessageRecieved)) {\r\n\t\t\t\t\tsetNotification([newMessageRecieved, ...notification]);\r\n\t\t\t\t\tsetFetchAgain(!fetchAgain);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetMessages([...messages, newMessageRecieved]);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tconst typingHandler = (e) => {\r\n\t\tsetNewMessage(e.target.value);\r\n\r\n\t\tif (!socketConnected) return;\r\n\r\n\t\tif (!typing) {\r\n\t\t\tsetTyping(true);\r\n\t\t\tsocket.emit(\"typing\", selectedChat._id);\r\n\t\t}\r\n\t\tlet lastTypingTime = new Date().getTime();\r\n\t\tvar timerLength = 3000;\r\n\t\tsetTimeout(() => {\r\n\t\t\tvar timeNow = new Date().getTime();\r\n\t\t\tvar timeDiff = timeNow - lastTypingTime;\r\n\t\t\tif (timeDiff >= timerLength && typing) {\r\n\t\t\t\tsocket.emit(\"stop typing\", selectedChat._id);\r\n\t\t\t\tsetTyping(false);\r\n\t\t\t}\r\n\t\t}, timerLength);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{selectedChat ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tfontSize={{ base: \"28px\", md: \"30px\" }}\r\n\t\t\t\t\t\tpb={3}\r\n\t\t\t\t\t\tpx={2}\r\n\t\t\t\t\t\tw=\"100%\"\r\n\t\t\t\t\t\tfontFamily=\"Work sans\"\r\n\t\t\t\t\t\td=\"flex\"\r\n\t\t\t\t\t\tjustifyContent={{ base: \"space-between\" }}\r\n\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\td={{ base: \"flex\", md: \"none\" }}\r\n\t\t\t\t\t\t\ticon={<ArrowBackIcon />}\r\n\t\t\t\t\t\t\tonClick={() => setSelectedChat(\"\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{messages &&\r\n\t\t\t\t\t\t\t(!selectedChat.isGroupChat ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{getSender(user, selectedChat.users)}\r\n\t\t\t\t\t\t\t\t\t<ProfileModal\r\n\t\t\t\t\t\t\t\t\t\tuser={getSenderFull(user, selectedChat.users)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{selectedChat.chatName.toUpperCase()}\r\n\t\t\t\t\t\t\t\t\t<UpdateGroupChatModal\r\n\t\t\t\t\t\t\t\t\t\tfetchMessages={fetchMessages}\r\n\t\t\t\t\t\t\t\t\t\tfetchAgain={fetchAgain}\r\n\t\t\t\t\t\t\t\t\t\tsetFetchAgain={setFetchAgain}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\td=\"flex\"\r\n\t\t\t\t\t\tflexDir=\"column\"\r\n\t\t\t\t\t\tjustifyContent=\"flex-end\"\r\n\t\t\t\t\t\tp={3}\r\n\t\t\t\t\t\tbg=\"#E8E8E8\"\r\n\t\t\t\t\t\tw=\"100%\"\r\n\t\t\t\t\t\th=\"100%\"\r\n\t\t\t\t\t\tborderRadius=\"lg\"\r\n\t\t\t\t\t\toverflowY=\"hidden\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\t\t\tsize=\"xl\"\r\n\t\t\t\t\t\t\t\tw={20}\r\n\t\t\t\t\t\t\t\th={20}\r\n\t\t\t\t\t\t\t\talignSelf=\"center\"\r\n\t\t\t\t\t\t\t\tmargin=\"auto\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"messages\">\r\n\t\t\t\t\t\t\t\t<ScrollableChat messages={messages} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tonKeyDown={sendMessage}\r\n\t\t\t\t\t\t\tid=\"first-name\"\r\n\t\t\t\t\t\t\tisRequired\r\n\t\t\t\t\t\t\tmt={3}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{istyping ? (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Lottie\r\n\t\t\t\t\t\t\t\t\t\toptions={defaultOptions}\r\n\t\t\t\t\t\t\t\t\t\t// height={50}\r\n\t\t\t\t\t\t\t\t\t\twidth={70}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: 15, marginLeft: 0 }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tvariant=\"filled\"\r\n\t\t\t\t\t\t\t\tbg=\"#E0E0E0\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter a message..\"\r\n\t\t\t\t\t\t\t\tvalue={newMessage}\r\n\t\t\t\t\t\t\t\tonChange={typingHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t// to get socket.io on same page\r\n\t\t\t\t<Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n\t\t\t\t\t<Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n\t\t\t\t\t\tClick on a user to start chatting\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SingleChat;\r\n","export const isSameSenderMargin = (messages, m, i, userId) => {\r\n\t// console.log(i === messages.length - 1);\r\n\r\n\tif (\r\n\t\ti < messages.length - 1 &&\r\n\t\tmessages[i + 1].sender._id === m.sender._id &&\r\n\t\tmessages[i].sender._id !== userId\r\n\t)\r\n\t\treturn 33;\r\n\telse if (\r\n\t\t(i < messages.length - 1 &&\r\n\t\t\tmessages[i + 1].sender._id !== m.sender._id &&\r\n\t\t\tmessages[i].sender._id !== userId) ||\r\n\t\t(i === messages.length - 1 && messages[i].sender._id !== userId)\r\n\t)\r\n\t\treturn 0;\r\n\telse return \"auto\";\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n\treturn (\r\n\t\ti < messages.length - 1 &&\r\n\t\t(messages[i + 1].sender._id !== m.sender._id ||\r\n\t\t\tmessages[i + 1].sender._id === undefined) &&\r\n\t\tmessages[i].sender._id !== userId\r\n\t);\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n\treturn (\r\n\t\ti === messages.length - 1 &&\r\n\t\tmessages[messages.length - 1].sender._id !== userId &&\r\n\t\tmessages[messages.length - 1].sender._id\r\n\t);\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n\treturn i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};\r\n\r\nexport const getSender = (loggedUser, users) => {\r\n\treturn users[0]._id === loggedUser._id ? users[1].name : users[0].name;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, users) => {\r\n\treturn users[0]._id === loggedUser._id ? users[1] : users[0];\r\n};\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n\tconst [selectedChat, setSelectedChat] = useState();\r\n\tconst [user, setUser] = useState();\r\n\tconst [notification, setNotification] = useState([]);\r\n\tconst [chats, setChats] = useState();\r\n\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\t\tsetUser(userInfo);\r\n\r\n\t\tif (!userInfo) history.push(\"/\");\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [history]);\r\n\r\n\treturn (\r\n\t\t<ChatContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tselectedChat,\r\n\t\t\t\tsetSelectedChat,\r\n\t\t\t\tuser,\r\n\t\t\t\tsetUser,\r\n\t\t\t\tnotification,\r\n\t\t\t\tsetNotification,\r\n\t\t\t\tchats,\r\n\t\t\t\tsetChats,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</ChatContext.Provider>\r\n\t);\r\n};\r\n\r\nexport const ChatState = () => {\r\n\treturn useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = ({ handleFunction, user }) => {\n\t// const { user } = ChatState();\n\n\treturn (\n\t\t<Box\n\t\t\tonClick={handleFunction}\n\t\t\tcursor=\"pointer\"\n\t\t\tbg=\"#E8E8E8\"\n\t\t\t_hover={{\n\t\t\t\tbackground: \"#38B2AC\",\n\t\t\t\tcolor: \"white\",\n\t\t\t}}\n\t\t\tw=\"100%\"\n\t\t\td=\"flex\"\n\t\t\talignItems=\"center\"\n\t\t\tcolor=\"black\"\n\t\t\tpx={3}\n\t\t\tpy={2}\n\t\t\tmb={2}\n\t\t\tborderRadius=\"lg\"\n\t\t>\n\t\t\t<Avatar\n\t\t\t\tmr={2}\n\t\t\t\tsize=\"sm\"\n\t\t\t\tcursor=\"pointer\"\n\t\t\t\tname={user.name}\n\t\t\t\tsrc={user.pic}\n\t\t\t/>\n\t\t\t<Box>\n\t\t\t\t<Text>{user.name}</Text>\n\t\t\t\t<Text fontSize=\"xs\">\n\t\t\t\t\t<b>Email : </b>\n\t\t\t\t\t{user.email}\n\t\t\t\t</Text>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\n\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n\tconst [loggedUser, setLoggedUser] = useState();\r\n\r\n\tconst { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n\tconst toast = useToast();\r\n\r\n\tconst fetchChats = async () => {\r\n\t\t// console.log(user._id);\r\n\t\ttry {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${user.token}`,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tconst { data } = await axios.get(\"/api/chat\", config);\r\n\t\t\tsetChats(data);\r\n\t\t} catch (error) {\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Error Occured!\",\r\n\t\t\t\tdescription: \"Failed to Load the chats\",\r\n\t\t\t\tstatus: \"error\",\r\n\t\t\t\tduration: 5000,\r\n\t\t\t\tisClosable: true,\r\n\t\t\t\tposition: \"bottom-left\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n\t\tfetchChats();\r\n\t\t// eslint-disable-next-line\r\n\t}, [fetchAgain]);\r\n\r\n\treturn (\r\n\t\t<Box\r\n\t\t\td={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n\t\t\tflexDir=\"column\"\r\n\t\t\talignItems=\"center\"\r\n\t\t\tp={3}\r\n\t\t\tbg=\"white\"\r\n\t\t\tw={{ base: \"100%\", md: \"31%\" }}\r\n\t\t\tborderRadius=\"lg\"\r\n\t\t\tborderWidth=\"1px\"\r\n\t\t>\r\n\t\t\t<Box\r\n\t\t\t\tpb={3}\r\n\t\t\t\tpx={3}\r\n\t\t\t\tfontSize={{ base: \"28px\", md: \"30px\" }}\r\n\t\t\t\tfontFamily=\"Work sans\"\r\n\t\t\t\td=\"flex\"\r\n\t\t\t\tw=\"100%\"\r\n\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t>\r\n\t\t\t\tMy Chats\r\n\t\t\t</Box>\r\n\t\t\t<Box\r\n\t\t\t\td=\"flex\"\r\n\t\t\t\tflexDir=\"column\"\r\n\t\t\t\tp={3}\r\n\t\t\t\tbg=\"#F8F8F8\"\r\n\t\t\t\tw=\"100%\"\r\n\t\t\t\th=\"100%\"\r\n\t\t\t\tborderRadius=\"lg\"\r\n\t\t\t\toverflowY=\"hidden\"\r\n\t\t\t>\r\n\t\t\t\t{chats ? (\r\n\t\t\t\t\t<Stack overflowY=\"scroll\">\r\n\t\t\t\t\t\t{chats.map((chat) => (\r\n\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\tonClick={() => setSelectedChat(chat)}\r\n\t\t\t\t\t\t\t\tcursor=\"pointer\"\r\n\t\t\t\t\t\t\t\tbg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n\t\t\t\t\t\t\t\tcolor={selectedChat === chat ? \"white\" : \"black\"}\r\n\t\t\t\t\t\t\t\tpx={3}\r\n\t\t\t\t\t\t\t\tpy={2}\r\n\t\t\t\t\t\t\t\tborderRadius=\"lg\"\r\n\t\t\t\t\t\t\t\tkey={chat._id}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t\t\t\t{!chat.isGroupChat\r\n\t\t\t\t\t\t\t\t\t\t? getSender(loggedUser, chat.users)\r\n\t\t\t\t\t\t\t\t\t\t: chat.chatName}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t{chat.latestMessage && (\r\n\t\t\t\t\t\t\t\t\t<Text fontSize=\"xs\">\r\n\t\t\t\t\t\t\t\t\t\t<b>{chat.latestMessage.sender.name} : </b>\r\n\t\t\t\t\t\t\t\t\t\t{chat.latestMessage.content.length > 50\r\n\t\t\t\t\t\t\t\t\t\t\t? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n\t\t\t\t\t\t\t\t\t\t\t: chat.latestMessage.content}\r\n\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ChatLoading />\r\n\t\t\t\t)}\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default MyChats;\r\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n\tMenu,\n\tMenuButton,\n\tMenuDivider,\n\tMenuItem,\n\tMenuList,\n} from \"@chakra-ui/menu\";\nimport {\n\tDrawer,\n\tDrawerBody,\n\tDrawerContent,\n\tDrawerHeader,\n\tDrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n\tconst [search, setSearch] = useState(\"\");\n\tconst [searchResult, setSearchResult] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [loadingChat, setLoadingChat] = useState(false);\n\n\tconst {\n\t\tsetSelectedChat,\n\t\tuser,\n\t\tnotification,\n\t\tsetNotification,\n\t\tchats,\n\t\tsetChats,\n\t} = ChatState();\n\n\tconst toast = useToast();\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\n\tconst history = useHistory();\n\n\tconst logoutHandler = () => {\n\t\tlocalStorage.removeItem(\"userInfo\");\n\t\thistory.push(\"/\");\n\t};\n\n\tconst handleSearch = async () => {\n\t\tif (!search) {\n\t\t\ttoast({\n\t\t\t\ttitle: \"Please Enter something in search\",\n\t\t\t\tstatus: \"warning\",\n\t\t\t\tduration: 5000,\n\t\t\t\tisClosable: true,\n\t\t\t\tposition: \"top-left\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tsetLoading(true);\n\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${user.token}`,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst { data } = await axios.get(`/api/user?search=${search}`, config);\n\n\t\t\tsetLoading(false);\n\t\t\tsetSearchResult(data);\n\t\t} catch (error) {\n\t\t\ttoast({\n\t\t\t\ttitle: \"Error Occured!\",\n\t\t\t\tdescription: \"Failed to Load the Search Results\",\n\t\t\t\tstatus: \"error\",\n\t\t\t\tduration: 5000,\n\t\t\t\tisClosable: true,\n\t\t\t\tposition: \"bottom-left\",\n\t\t\t});\n\t\t}\n\t};\n\n\tconst accessChat = async (userId) => {\n\t\tconsole.log(userId);\n\n\t\ttry {\n\t\t\tsetLoadingChat(true);\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-type\": \"application/json\",\n\t\t\t\t\tAuthorization: `Bearer ${user.token}`,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst { data } = await axios.post(`/api/chat`, { userId }, config);\n\n\t\t\tif (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n\t\t\tsetSelectedChat(data);\n\t\t\tsetLoadingChat(false);\n\t\t\tonClose();\n\t\t} catch (error) {\n\t\t\ttoast({\n\t\t\t\ttitle: \"Error fetching the chat\",\n\t\t\t\tdescription: error.message,\n\t\t\t\tstatus: \"error\",\n\t\t\t\tduration: 5000,\n\t\t\t\tisClosable: true,\n\t\t\t\tposition: \"bottom-left\",\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Box\n\t\t\t\td=\"flex\"\n\t\t\t\tjustifyContent=\"space-between\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tbg=\"white\"\n\t\t\t\tw=\"100%\"\n\t\t\t\tp=\"5px 10px 5px 10px\"\n\t\t\t\tborderWidth=\"5px\"\n\t\t\t>\n\t\t\t\t<Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n\t\t\t\t\t<Button variant=\"ghost\" onClick={onOpen}>\n\t\t\t\t\t\t<i className=\"fas fa-search\"></i>\n\t\t\t\t\t\t<Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n\t\t\t\t\t\t\tSearch User\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n\t\t\t\t\tChatzzz\n\t\t\t\t</Text>\n\t\t\t\t<div>\n\t\t\t\t\t<Menu>\n\t\t\t\t\t\t<MenuButton p={1}>\n\t\t\t\t\t\t\t<NotificationBadge\n\t\t\t\t\t\t\t\tcount={notification.length}\n\t\t\t\t\t\t\t\teffect={Effect.SCALE}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<BellIcon fontSize=\"2xl\" m={1} />\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t\t<MenuList pl={2}>\n\t\t\t\t\t\t\t{!notification.length && \"No New Messages\"}\n\t\t\t\t\t\t\t{notification.map((notif) => (\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tkey={notif._id}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetSelectedChat(notif.chat);\n\t\t\t\t\t\t\t\t\t\tsetNotification(notification.filter((n) => n !== notif));\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{notif.chat.isGroupChat\n\t\t\t\t\t\t\t\t\t\t? `New Message in ${notif.chat.chatName}`\n\t\t\t\t\t\t\t\t\t\t: `New Message from ${getSender(user, notif.chat.users)}`}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</MenuList>\n\t\t\t\t\t</Menu>\n\t\t\t\t\t<Menu>\n\t\t\t\t\t\t<MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tcursor=\"pointer\"\n\t\t\t\t\t\t\t\tname={user.name}\n\t\t\t\t\t\t\t\tsrc={user.pic}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t\t<MenuList>\n\t\t\t\t\t\t\t<ProfileModal user={user}>\n\t\t\t\t\t\t\t\t<MenuItem>My Profile</MenuItem>{\" \"}\n\t\t\t\t\t\t\t</ProfileModal>\n\t\t\t\t\t\t\t<MenuDivider />\n\t\t\t\t\t\t\t<MenuItem onClick={logoutHandler}>Logout</MenuItem>\n\t\t\t\t\t\t</MenuList>\n\t\t\t\t\t</Menu>\n\t\t\t\t</div>\n\t\t\t</Box>\n\n\t\t\t<Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n\t\t\t\t<DrawerOverlay />\n\t\t\t\t<DrawerContent>\n\t\t\t\t\t<DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n\t\t\t\t\t<DrawerBody>\n\t\t\t\t\t\t<Box d=\"flex\" pb={2}>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tplaceholder=\"Search by name or email\"\n\t\t\t\t\t\t\t\tmr={2}\n\t\t\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\t\t\tonChange={(e) => setSearch(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button onClick={handleSearch}>Go</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t\t<ChatLoading />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tsearchResult?.map((user) => (\n\t\t\t\t\t\t\t\t<UserListItem\n\t\t\t\t\t\t\t\t\tkey={user._id}\n\t\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\t\thandleFunction={() => accessChat(user._id)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n\t\t\t\t\t</DrawerBody>\n\t\t\t\t</DrawerContent>\n\t\t\t</Drawer>\n\t\t</>\n\t);\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatpage = () => {\r\n\tconst [fetchAgain, setFetchAgain] = useState(false);\r\n\tconst { user } = ChatState();\r\n\r\n\treturn (\r\n\t\t<div style={{ width: \"100%\" }}>\r\n\t\t\t{user && <SideDrawer />}\r\n\t\t\t<Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\r\n\t\t\t\t{user && <MyChats fetchAgain={fetchAgain} />}\r\n\t\t\t\t{user && (\r\n\t\t\t\t\t<Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n\t\t\t\t)}\r\n\t\t\t</Box>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chatpage;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\n\r\nconst Login = () => {\r\n\tconst [show, setShow] = useState(false);\r\n\tconst handleClick = () => setShow(!show);\r\n\tconst toast = useToast();\r\n\tconst history = useHistory();\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\r\n\tconst submitHandler = async () => {\r\n\t\tif (!email || !password) {\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Please Fill all the Feilds\",\r\n\t\t\t\tstatus: \"warning\",\r\n\t\t\t\tduration: 5000,\r\n\t\t\t\tisClosable: true,\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// console.log(email, password);\r\n\t\ttry {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tconst { data } = await axios.post(\r\n\t\t\t\t\"/api/user/login\",\r\n\t\t\t\t{ email, password },\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\r\n\t\t\t// console.log(JSON.stringify(data));\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Login Successful\",\r\n\t\t\t\tstatus: \"success\",\r\n\t\t\t\tduration: 5000,\r\n\t\t\t\tisClosable: true,\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t});\r\n\t\t\tlocalStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n\t\t\thistory.push(\"/chats\");\r\n\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tdocument.location.reload();\r\n\t\t\t}, 4000);\r\n\t\t} catch (error) {\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Error Occured!\",\r\n\t\t\t\tdescription: error.response.data.message,\r\n\t\t\t\tstatus: \"error\",\r\n\t\t\t\tduration: 5000,\r\n\t\t\t\tisClosable: true,\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<VStack spacing=\"10px\">\r\n\t\t\t<FormControl id=\"email\" isRequired>\r\n\t\t\t\t<FormLabel>Email Address</FormLabel>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tplaceholder=\"Enter Your Email Address\"\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl id=\"password\" isRequired>\r\n\t\t\t\t<FormLabel>Password</FormLabel>\r\n\t\t\t\t<InputGroup size=\"md\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\ttype={show ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tplaceholder=\"Enter password\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputRightElement width=\"4.5rem\">\r\n\t\t\t\t\t\t<Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n\t\t\t\t\t\t\t{show ? \"Hide\" : \"Show\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</InputRightElement>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t</FormControl>\r\n\t\t\t<Button\r\n\t\t\t\tcolorScheme=\"blue\"\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tstyle={{ marginTop: 15 }}\r\n\t\t\t\tonClick={submitHandler}\r\n\t\t\t>\r\n\t\t\t\tLogin\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tclassName=\"expand-btn-green\"\r\n\t\t\t\tvariant=\"solid\"\r\n\t\t\t\tcolorScheme=\"green\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetEmail(\"woof@woof.com\");\r\n\t\t\t\t\tsetPassword(\"woof\");\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tTest?\r\n\t\t\t</Button>\r\n\t\t</VStack>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\n\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\n\r\nconst Signup = () => {\r\n\tconst toast = useToast();\r\n\tconst history = useHistory();\r\n\r\n\tconst [show, setShow] = useState(false);\r\n\r\n\tconst [name, setName] = useState();\r\n\tconst [email, setEmail] = useState();\r\n\tconst [confirmpassword, setConfirmpassword] = useState();\r\n\tconst [password, setPassword] = useState();\r\n\tconst [pic, setPic] = useState(\r\n\t\t\"https://avatars.githubusercontent.com/u/97225946?v=4\"\r\n\t);\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetShow(!show);\r\n\t};\r\n\r\n\tconst submitHandler = async () => {\r\n\t\tif (!name || !email || !password || !confirmpassword) {\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Please Fill all the Feilds\",\r\n\t\t\t\tstatus: \"warning\",\r\n\t\t\t\tduration: 5000,\r\n\t\t\t\tisClosable: true,\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (password !== confirmpassword) {\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Passwords Do Not Match\",\r\n\t\t\t\tstatus: \"warning\",\r\n\t\t\t\tduration: 5000,\r\n\t\t\t\tisClosable: true,\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconsole.log(name, email, password, pic);\r\n\t\ttry {\r\n\t\t\tconst config = {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tconst { data } = await axios.post(\r\n\t\t\t\t\"/api/user\",\r\n\t\t\t\t{\r\n\t\t\t\t\tname,\r\n\t\t\t\t\temail,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\tpic,\r\n\t\t\t\t},\r\n\t\t\t\tconfig\r\n\t\t\t);\r\n\t\t\tconsole.log(data);\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Registration Successful\",\r\n\t\t\t\tstatus: \"success\",\r\n\t\t\t\tduration: 5000,\r\n\t\t\t\tisClosable: true,\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t});\r\n\t\t\tlocalStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n\t\t\thistory.push(\"/chats\");\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tdocument.location.reload();\r\n\t\t\t}, 4000);\r\n\t\t} catch (error) {\r\n\t\t\ttoast({\r\n\t\t\t\ttitle: \"Error Occured!\",\r\n\t\t\t\tdescription: error.response.data.message,\r\n\t\t\t\tstatus: \"error\",\r\n\t\t\t\tduration: 5000,\r\n\t\t\t\tisClosable: true,\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<VStack spacing=\"5px\">\r\n\t\t\t<FormControl id=\"first-name\" isRequired>\r\n\t\t\t\t<FormLabel>Name</FormLabel>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tplaceholder=\"Enter Your Name\"\r\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl id=\"email\" isRequired>\r\n\t\t\t\t<FormLabel>Email Address</FormLabel>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tplaceholder=\"Enter Your Email Address\"\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl id=\"password\" isRequired>\r\n\t\t\t\t<FormLabel>Password</FormLabel>\r\n\t\t\t\t<InputGroup size=\"md\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype={show ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tplaceholder=\"Enter Password\"\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputRightElement width=\"4.5rem\">\r\n\t\t\t\t\t\t<Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n\t\t\t\t\t\t\t{show ? \"Hide\" : \"Show\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</InputRightElement>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t</FormControl>\r\n\t\t\t<FormControl id=\"confirmPassword\" isRequired>\r\n\t\t\t\t<FormLabel>Confirm Password</FormLabel>\r\n\t\t\t\t<InputGroup size=\"md\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype={show ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tplaceholder=\"Confirm password\"\r\n\t\t\t\t\t\tonChange={(e) => setConfirmpassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InputRightElement width=\"4.5rem\">\r\n\t\t\t\t\t\t<Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n\t\t\t\t\t\t\t{show ? \"Hide\" : \"Show\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</InputRightElement>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t</FormControl>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tcolorScheme=\"blue\"\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tstyle={{ marginTop: 15 }}\r\n\t\t\t\tonClick={submitHandler}\r\n\t\t\t>\r\n\t\t\t\tSign Up\r\n\t\t\t</Button>\r\n\t\t</VStack>\r\n\t);\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n\tContainer,\r\n\tBox,\r\n\tText,\r\n\tTabs,\r\n\tTab,\r\n\tTabList,\r\n\tTabPanel,\r\n\tTabPanels,\r\n} from \"@chakra-ui/react\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport Signup from \"../components/Authentication/Signup\";\r\n\r\nconst HomePage = () => {\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n\t\tif (user) history.push(\"/chats\");\r\n\t}, [history]);\r\n\r\n\treturn (\r\n\t\t<Container maxW=\"xl\" centerContent>\r\n\t\t\t<Box\r\n\t\t\t\td=\"flex\"\r\n\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\tp={3}\r\n\t\t\t\tbg={\"white\"}\r\n\t\t\t\tw=\"100%\"\r\n\t\t\t\tm=\"40px 0 15px 0\"\r\n\t\t\t\tborderRadius=\"lg\"\r\n\t\t\t\tborderWidth=\"1px\"\r\n\t\t\t>\r\n\t\t\t\t<Text fontSize=\"4xl\" fontFamily=\"Work sans\" color=\"black\">\r\n\t\t\t\t\tChatzzz\r\n\t\t\t\t</Text>\r\n\t\t\t</Box>\r\n\t\t\t<Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n\t\t\t\t<Tabs isFitted variant=\"soft-rounded\">\r\n\t\t\t\t\t<TabList mb=\"1em\">\r\n\t\t\t\t\t\t<Tab>Login</Tab>\r\n\t\t\t\t\t\t<Tab>Sign Up</Tab>\r\n\t\t\t\t\t</TabList>\r\n\t\t\t\t\t<TabPanels>\r\n\t\t\t\t\t\t<TabPanel>\r\n\t\t\t\t\t\t\t<Login />\r\n\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t<TabPanel>\r\n\t\t\t\t\t\t\t<Signup />\r\n\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t</TabPanels>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Box>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default HomePage;\r\n","import { Button } from \"@chakra-ui/react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Chatpage from \"./Pages/Chatpage\";\r\nimport HomePage from \"./Pages/HomePage\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Route exact path=\"/\" component={HomePage} />\r\n\t\t\t<Route path=\"/chats\" component={Chatpage} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ChatProvider from \"./Context/ChatProvider\";\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<ChatProvider>\n\t\t\t<ChakraProvider>\n\t\t\t\t<App />\n\t\t\t</ChakraProvider>\n\t\t</ChatProvider>\n\t</BrowserRouter>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}